compose:
  - call: lcod://tooling/script@1
    in:
      source: |
        async ({ state }, { imports }) => {
          const result = await imports.pathJoin({
            base: state.ragRoot,
            segment: 'packages/rag/components/registry.register_helpers/compose.yaml'
          });
          const composePath = result?.path || result;
          return {
            helperRegistration: composePath
              ? [{ id: 'lcod://rag/registry/register_helpers@0.1.0', composePath }]
              : []
          };
        }
      input:
        ragRoot: $.ragRoot
      imports:
        pathJoin: lcod://axiom/path/join@1
    out:
      helperRegistration: helperRegistration

  - call: lcod://tooling/resolver/register@1
    in:
      components: $.helperRegistration
    out:
      helperRegistered: bootstrapRegistered
      helperRegisterWarnings: bootstrapWarnings

  - call: lcod://rag/registry/register_helpers@0.1.0
    in:
      ragRoot: $.ragRoot
    out:
      helperRegistered: registered
      helperWarnings: helperWarnings

  - call: lcod://rag/registry/snapshot_read@0.1.0
    in:
      path: $.snapshotPath
      warningMessage: $.missingSnapshotWarning
    out:
      snapshot: previousSnapshot
      exists: previousExists
      warnings: readWarnings

  - call: lcod://rag/registry/collect_components@0.1.0
    in:
      projectPath: $.projectPath
      cataloguesPath: $.cataloguesPath
      sourceId: $.sourceId
      cacheDir: $.cacheDir
      cwd: $.cwd
      specRoot: $.specRoot
      ragRoot: $.ragRoot
    out:
      components: components
      warnings: collectWarnings

  - call: lcod://rag/registry/snapshot_from_components@0.1.0
    in:
      components: $.components
    out:
      snapshot: currentSnapshot
      entries: snapshotEntries

  - call: lcod://rag/registry/diff_snapshots@0.1.0
    in:
      previous: $.previousSnapshot
      current: $.currentSnapshot
    out:
      added: added
      removed: removed
      updated: updated
      unchanged: unchanged

  - call: lcod://tooling/value/default_array@0.1.0
    in:
      value: $.readWarnings
    out:
      accumulatedWarnings: resolved

  - call: lcod://tooling/value/default_array@0.1.0
    in:
      value: $.collectWarnings
    out:
      collectWarningsList: resolved

  - call: lcod://tooling/value/default_array@0.1.0
    in:
      value: $.bootstrapWarnings
    out:
      bootstrapWarningsList: resolved

  - call: lcod://tooling/value/default_array@0.1.0
    in:
      value: $.helperWarnings
    out:
      helperWarningsList: resolved

  - call: lcod://tooling/array/append@0.1.0
    in:
      items: $.accumulatedWarnings
      values: $.collectWarningsList
    out:
      warnings: items

  - call: lcod://tooling/array/append@0.1.0
    in:
      items: $.warnings
      values: $.bootstrapWarningsList
    out:
      warnings: items

  - call: lcod://tooling/array/append@0.1.0
    in:
      items: $.warnings
      values: $.helperWarningsList
    out:
      warnings: items

  - call: lcod://impl/set@1
    in:
      components: $.components
      snapshot: $.currentSnapshot
      snapshotEntries: $.snapshotEntries
      diff:
        added: $.added
        removed: $.removed
        updated: $.updated
        unchanged: $.unchanged
      previousExists: $.previousExists
      warnings: $.warnings
    out:
      components: components
      snapshot: snapshot
      snapshotEntries: snapshotEntries
      diff: diff
      previousExists: previousExists
      warnings: warnings
